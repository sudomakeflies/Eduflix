events {
    worker_connections 1024;
}

http {
    server {
        listen 80;
        server_name 192.168.0.104; # Replace with your domain or IP
        root /usr/share/nginx/html; # Define the root directory

        # Add CORS headers for all responses
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';

        # Handle CORS preflight requests
        location / {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Max-Age' 1728000; # Cache preflight response for 20 days
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            try_files $uri $uri/ =404;
        }

        # Configuration for serving .m3u8 files
        location ~ \.m3u8$ {
            types {
                application/vnd.apple.mpegurl m3u8;
            }
            add_header Cache-Control "no-cache"; # Prevent caching of playlists
            add_header 'Access-Control-Allow-Origin' '*'; # Explicitly add CORS header
        }

        # Configuration for serving .ts video segments
        location ~ \.ts$ {
            types {
                video/mp2t ts;
            }
            add_header Cache-Control "max-age=3600"; # Cache segments for 1 hour (adjust as needed)
            add_header 'Access-Control-Allow-Origin' '*'; # Explicitly add CORS header
        }
    }
}